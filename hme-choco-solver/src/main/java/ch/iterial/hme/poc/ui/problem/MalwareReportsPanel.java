package ch.iterial.hme.poc.ui.problem;

import ch.iterial.hme.poc.model.input.FaultMessage;
import ch.iterial.hme.poc.model.input.Input;
import ch.iterial.hme.poc.model.problem.MalwareProblem;
import ch.iterial.hme.poc.model.problem.MalwareProblemData;
import ch.iterial.hme.poc.ui.SolutionPanel;
import ch.iterial.hme.poc.util.UiUtils;

import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import java.awt.Dimension;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.Arrays;
import java.util.Calendar;
import java.util.GregorianCalendar;

public class MalwareReportsPanel extends SolutionPanel<MalwareProblemData, FaultMessage> {

    private final JTextArea report;

    public MalwareReportsPanel() {
        super(5, "Malware reports", new MalwareProblem(), input -> new MalwareProblemData(input.faultComm.faultType));

        final JLabel reportText = UiUtils.textLabel("Attack Reports", 130, 50);

        report = new JTextArea("");
        report.setEditable(false);
        final JScrollPane scrollPane = new JScrollPane(report);
        scrollPane.setPreferredSize(new Dimension(220, 60));

        add(reportText);
        add(scrollPane);
    }

    @Override
    public boolean supports(final Input input) {
        return input instanceof FaultMessage && Arrays.asList(
                "UnsuccessfulMalwareAttack",
                "SuccessfulMalwareAttack"
        ).contains(FaultMessage.class.cast(input).faultComm.faultType);
    }

    @Override
    public void pushInput(final FaultMessage input) {
        final LocalDateTime timestamp = input.timestamp();
        final Calendar calendar = GregorianCalendar.from(timestamp.atZone(ZoneId.systemDefault()));

        report.append(String.format("UID #%s, %tD %tT", input.originalUid, calendar, calendar));
        report.append("\n");

        super.pushInput(input);
    }

    @Override
    public void resetInputs() {
        report.setText("");

        super.resetInputs();
    }

}
